{
  "$schema": "https://json.schemastore.org/eslintrc.json",

  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:unicorn/recommended"
  ],
  "plugins": ["@typescript-eslint", "import", "unicorn"],

  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "impliedStrict": true
    },
    "sourceType": "module",
    "warnOnUnsupportedTypeScriptVersion": false
  },

  "settings": {
    "import/extensions": [".ts", ".tsx", ".js", ".jsx"],
    "import/external-module-folders": ["node_modules", "node_modules/@types"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".ts", ".tsx", ".js", ".jsx"]
      },
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },

  "rules": {
    "no-console": "warn",
    "no-var": "error",

    // NOTE: Replaced by TypeScript compiler and `@typescript-eslint` rules.

    "default-param-last": "off",
    "dot-notation": "off",
    "init-declarations": "off",
    "no-invalid-this": "off",
    "no-loop-func": "off",
    "no-magic-numbers": "off",
    "no-restricted-imports": "off",
    "no-shadow": "off",
    "no-throw-literal": "off",
    "no-unused-expressions": "off",
    "no-use-before-define": "off",
    "no-useless-constructor": "off",

    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array-simple",
        "readonly": "array-simple"
      }
    ],
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-expect-error": "allow-with-description",
        "ts-ignore": true,
        "ts-nocheck": true,
        "ts-check": false
      }
    ],
    "@typescript-eslint/class-literal-property-style": ["error", "fields"],
    "@typescript-eslint/consistent-generic-constructors": ["error", "constructor"],
    "@typescript-eslint/consistent-indexed-object-style": ["error", "record"],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "allow"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/consistent-type-exports": [
      "error",
      {
        "fixMixedExportsWithInlineTypeSpecifier": true
      }
    ],
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "no-type-imports",
        "disallowTypeAnnotations": true
      }
    ],
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/explicit-member-accessibility": ["error", { "accessibility": "explicit" }],
    "@typescript-eslint/explicit-module-boundary-types": [
      "error",
      {
        "allowArgumentsExplicitlyTypedAsAny": false,
        "allowDirectConstAssertionInArrowFunctions": true,
        "allowHigherOrderFunctions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/init-declarations": "error",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/method-signature-style": ["error", "property"],
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-confusing-void-expression": "error",
    "@typescript-eslint/no-dupe-class-members": "error",
    "@typescript-eslint/no-duplicate-enum-values": "warn",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extraneous-class": "error",
    "@typescript-eslint/no-invalid-this": "error",
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/no-meaningless-void-operator": "warn",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
    "@typescript-eslint/no-redeclare": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-shadow": [
      "error",
      {
        "builtinGlobals": false
      }
    ],
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "args": "all",
        "argsIgnorePattern": "^_",
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/non-nullable-type-assertion-style": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "warn",
    "@typescript-eslint/prefer-literal-enum-member": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-return-this-type": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "warn",
    "@typescript-eslint/prefer-ts-expect-error": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/unified-signatures": "error",

    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/first": ["error", "absolute-first"],
    "import/named": "off",
    "import/newline-after-import": "error",
    "import/no-absolute-path": "error",
    "import/no-cycle": "off",
    "import/no-duplicates": "error",
    "import/no-self-import": "error",
    "import/no-unresolved": "off",
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal"]
      }
    ],
    "import/prefer-default-export": "off",

    "unicorn/custom-error-definition": "error",
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "camelCase": true,
          "pascalCase": true
        }
      }
    ],
    "unicorn/no-array-reduce": "off",
    "unicorn/no-null": "off",
    "unicorn/no-unsafe-regex": "error",
    "unicorn/prefer-at": "error",
    "unicorn/prefer-string-replace-all": "error",
    "unicorn/prevent-abbreviations": "off",

    // NOTE: Enabled for browser only.

    "unicorn/no-invalid-remove-event-listener": "off",
    "unicorn/prefer-add-event-listener": "off",
    "unicorn/prefer-dom-node-append": "off",
    "unicorn/prefer-dom-node-dataset": "off",
    "unicorn/prefer-dom-node-remove": "off",
    "unicorn/prefer-dom-node-text-content": "off",
    "unicorn/prefer-keyboard-event-key": "off",
    "unicorn/prefer-modern-dom-apis": "off",
    "unicorn/prefer-query-selector": "off",

    // NOTE: Enable for Node.js only.

    "unicorn/no-new-buffer": "off",
    "unicorn/no-process-exit": "off",
    "unicorn/prefer-event-target": "off",
    "unicorn/prefer-json-parse-buffer": "off",
    "unicorn/prefer-node-protocol": "off",
    "unicorn/prefer-top-level-await": "off",
    "unicorn/text-encoding-identifier-case": "off"
  },

  "overrides": [
    {
      "files": ["types/**/*.d.ts"],

      "rules": {
        "import/export": "off",

        "unicorn/filename-case": "off"
      }
    }
  ]
}
